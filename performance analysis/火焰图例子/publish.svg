<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="213" width="10.9" height="15.0" fill="rgb(240,79,46)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (101,010,100 samples, 4.63%)</title><rect x="102.9" y="1861" width="54.6" height="15.0" fill="rgb(253,123,35)" rx="2" ry="2" />
<text  x="105.87" y="1871.5" >__wak..</text>
</g>
<g >
<title>__x64_sys_read (10,101,010 samples, 0.46%)</title><rect x="523.5" y="1989" width="5.5" height="15.0" fill="rgb(251,159,1)" rx="2" ry="2" />
<text  x="526.52" y="1999.5" ></text>
</g>
<g >
<title>__sched_text_start (40,404,040 samples, 1.85%)</title><rect x="485.3" y="1893" width="21.8" height="15.0" fill="rgb(218,43,51)" rx="2" ry="2" />
<text  x="488.28" y="1903.5" >_..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1429" width="10.9" height="15.0" fill="rgb(215,72,10)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" ></text>
</g>
<g >
<title>try_to_wake_up (10,101,010 samples, 0.46%)</title><rect x="64.6" y="1861" width="5.5" height="15.0" fill="rgb(205,115,32)" rx="2" ry="2" />
<text  x="67.63" y="1871.5" ></text>
</g>
<g >
<title>__virt_addr_valid (10,101,010 samples, 0.46%)</title><rect x="621.9" y="1877" width="5.4" height="15.0" fill="rgb(215,133,6)" rx="2" ry="2" />
<text  x="624.85" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="661" width="10.9" height="15.0" fill="rgb(238,32,26)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1861" width="10.9" height="15.0" fill="rgb(248,113,23)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (70,707,070 samples, 3.24%)</title><rect x="616.4" y="2037" width="38.2" height="15.0" fill="rgb(254,21,36)" rx="2" ry="2" />
<text  x="619.39" y="2047.5" >ent..</text>
</g>
<g >
<title>__local_bh_enable_ip (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1733" width="486.2" height="15.0" fill="rgb(226,19,47)" rx="2" ry="2" />
<text  x="690.41" y="1743.5" >__local_bh_enable_ip</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="837" width="10.9" height="15.0" fill="rgb(240,78,24)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="757" width="10.9" height="15.0" fill="rgb(216,67,12)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1205" width="10.9" height="15.0" fill="rgb(252,139,15)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (10,101,010 samples, 0.46%)</title><rect x="649.2" y="1957" width="5.4" height="15.0" fill="rgb(216,96,1)" rx="2" ry="2" />
<text  x="652.17" y="1967.5" ></text>
</g>
<g >
<title>fsnotify_add_event (101,010,100 samples, 4.63%)</title><rect x="102.9" y="1893" width="54.6" height="15.0" fill="rgb(218,28,34)" rx="2" ry="2" />
<text  x="105.87" y="1903.5" >fsnot..</text>
</g>
<g >
<title>dev_queue_xmit (10,101,010 samples, 0.46%)</title><rect x="1173.6" y="1733" width="5.5" height="15.0" fill="rgb(213,139,48)" rx="2" ry="2" />
<text  x="1176.61" y="1743.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, el::Logger*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt; &gt; &gt;::find (30,303,030 samples, 1.39%)</title><rect x="31.9" y="1925" width="16.3" height="15.0" fill="rgb(220,30,35)" rx="2" ry="2" />
<text  x="34.85" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1381" width="10.9" height="15.0" fill="rgb(250,195,36)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1541" width="10.9" height="15.0" fill="rgb(253,112,4)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" ></text>
</g>
<g >
<title>inet_sendmsg (979,797,970 samples, 44.91%)</title><rect x="654.6" y="1957" width="529.9" height="15.0" fill="rgb(220,9,7)" rx="2" ry="2" />
<text  x="657.63" y="1967.5" >inet_sendmsg</text>
</g>
<g >
<title>__tcp_transmit_skb (909,090,900 samples, 41.67%)</title><rect x="687.4" y="1861" width="491.7" height="15.0" fill="rgb(216,170,11)" rx="2" ry="2" />
<text  x="690.41" y="1871.5" >__tcp_transmit_skb</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1893" width="10.9" height="15.0" fill="rgb(225,73,14)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.46%)</title><rect x="567.2" y="1989" width="5.5" height="15.0" fill="rgb(212,148,33)" rx="2" ry="2" />
<text  x="570.22" y="1999.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (20,202,020 samples, 0.93%)</title><rect x="660.1" y="1909" width="10.9" height="15.0" fill="rgb(233,204,42)" rx="2" ry="2" />
<text  x="663.09" y="1919.5" ></text>
</g>
<g >
<title>__lock_text_start (10,101,010 samples, 0.46%)</title><rect x="605.5" y="1893" width="5.4" height="15.0" fill="rgb(235,47,42)" rx="2" ry="2" />
<text  x="608.46" y="1903.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (10,101,010 samples, 0.46%)</title><rect x="1173.6" y="1717" width="5.5" height="15.0" fill="rgb(249,49,30)" rx="2" ry="2" />
<text  x="1176.61" y="1727.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (868,686,860 samples, 39.81%)</title><rect x="703.8" y="1445" width="469.8" height="15.0" fill="rgb(250,201,22)" rx="2" ry="2" />
<text  x="706.80" y="1455.5" >__wake_up_sync_key</text>
</g>
<g >
<title>__softirqentry_text_start (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1685" width="486.2" height="15.0" fill="rgb(211,60,47)" rx="2" ry="2" />
<text  x="690.41" y="1695.5" >__softirqentry_text_start</text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 0.93%)</title><rect x="572.7" y="1989" width="10.9" height="15.0" fill="rgb(236,61,50)" rx="2" ry="2" />
<text  x="575.69" y="1999.5" ></text>
</g>
<g >
<title>schedule (40,404,040 samples, 1.85%)</title><rect x="485.3" y="1909" width="21.8" height="15.0" fill="rgb(245,140,18)" rx="2" ry="2" />
<text  x="488.28" y="1919.5" >s..</text>
</g>
<g >
<title>do_softirq_own_stack (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1717" width="10.9" height="15.0" fill="rgb(209,218,25)" rx="2" ry="2" />
<text  x="630.31" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (10,101,010 samples, 0.46%)</title><rect x="518.1" y="1861" width="5.4" height="15.0" fill="rgb(205,13,25)" rx="2" ry="2" />
<text  x="521.06" y="1871.5" ></text>
</g>
<g >
<title>ros::Subscription::handleMessage (10,101,010 samples, 0.46%)</title><rect x="556.3" y="1989" width="5.5" height="15.0" fill="rgb(226,124,13)" rx="2" ry="2" />
<text  x="559.30" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.46%)</title><rect x="556.3" y="2021" width="5.5" height="15.0" fill="rgb(250,214,36)" rx="2" ry="2" />
<text  x="559.30" y="2031.5" ></text>
</g>
<g >
<title>__alloc_skb (20,202,020 samples, 0.93%)</title><rect x="660.1" y="1893" width="10.9" height="15.0" fill="rgb(240,147,27)" rx="2" ry="2" />
<text  x="663.09" y="1903.5" ></text>
</g>
<g >
<title>el::base::DefaultLogDispatchCallback::handle (20,202,020 samples, 0.93%)</title><rect x="53.7" y="1925" width="10.9" height="15.0" fill="rgb(233,60,5)" rx="2" ry="2" />
<text  x="56.70" y="1935.5" ></text>
</g>
<g >
<title>__libc_start_main (121,212,120 samples, 5.56%)</title><rect x="26.4" y="2037" width="65.5" height="15.0" fill="rgb(208,63,7)" rx="2" ry="2" />
<text  x="29.39" y="2047.5" >__libc_..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1797" width="10.9" height="15.0" fill="rgb(212,43,32)" rx="2" ry="2" />
<text  x="13.00" y="1807.5" ></text>
</g>
<g >
<title>boost::detail::function::has_empty_target (10,101,010 samples, 0.46%)</title><rect x="561.8" y="2021" width="5.4" height="15.0" fill="rgb(230,207,6)" rx="2" ry="2" />
<text  x="564.76" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="741" width="10.9" height="15.0" fill="rgb(221,206,22)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.46%)</title><rect x="545.4" y="2005" width="5.4" height="15.0" fill="rgb(210,71,35)" rx="2" ry="2" />
<text  x="548.37" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1557" width="486.2" height="15.0" fill="rgb(223,0,35)" rx="2" ry="2" />
<text  x="690.41" y="1567.5" >ip_local_deliver_finish</text>
</g>
<g >
<title>kmem_cache_alloc_node (10,101,010 samples, 0.46%)</title><rect x="665.6" y="1877" width="5.4" height="15.0" fill="rgb(239,212,0)" rx="2" ry="2" />
<text  x="668.56" y="1887.5" ></text>
</g>
<g >
<title>__strlen_avx2 (10,101,010 samples, 0.46%)</title><rect x="70.1" y="1973" width="5.5" height="15.0" fill="rgb(225,196,3)" rx="2" ry="2" />
<text  x="73.09" y="1983.5" ></text>
</g>
<g >
<title>tcp_data_queue (10,101,010 samples, 0.46%)</title><rect x="698.3" y="1477" width="5.5" height="15.0" fill="rgb(215,171,27)" rx="2" ry="2" />
<text  x="701.33" y="1487.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.45 (10,101,010 samples, 0.46%)</title><rect x="632.8" y="1461" width="5.4" height="15.0" fill="rgb(250,129,15)" rx="2" ry="2" />
<text  x="635.78" y="1471.5" ></text>
</g>
<g >
<title>ros::TransportTCP::socketUpdate (10,101,010 samples, 0.46%)</title><rect x="583.6" y="2037" width="5.5" height="15.0" fill="rgb(207,144,48)" rx="2" ry="2" />
<text  x="586.61" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (888,888,880 samples, 40.74%)</title><rect x="692.9" y="1509" width="480.7" height="15.0" fill="rgb(206,227,16)" rx="2" ry="2" />
<text  x="695.87" y="1519.5" >tcp_v4_do_rcv</text>
</g>
<g >
<title>__wake_up_common_lock (181,818,180 samples, 8.33%)</title><rect x="163.0" y="1877" width="98.3" height="15.0" fill="rgb(211,211,50)" rx="2" ry="2" />
<text  x="165.96" y="1887.5" >__wake_up_c..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="501" width="10.9" height="15.0" fill="rgb(232,133,15)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1397" width="10.9" height="15.0" fill="rgb(231,121,1)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="341" width="10.9" height="15.0" fill="rgb(226,10,40)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="245" width="10.9" height="15.0" fill="rgb(227,183,19)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (30,303,030 samples, 1.39%)</title><rect x="31.9" y="1909" width="16.3" height="15.0" fill="rgb(218,22,35)" rx="2" ry="2" />
<text  x="34.85" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1301" width="10.9" height="15.0" fill="rgb(226,131,53)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.46%)</title><rect x="37.3" y="1877" width="5.5" height="15.0" fill="rgb(240,62,50)" rx="2" ry="2" />
<text  x="40.31" y="1887.5" ></text>
</g>
<g >
<title>tcp_send_ack (40,404,040 samples, 1.85%)</title><rect x="627.3" y="1909" width="21.9" height="15.0" fill="rgb(235,14,35)" rx="2" ry="2" />
<text  x="630.31" y="1919.5" >t..</text>
</g>
<g >
<title>ip_rcv (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1621" width="10.9" height="15.0" fill="rgb(234,96,39)" rx="2" ry="2" />
<text  x="630.31" y="1631.5" ></text>
</g>
<g >
<title>sock_poll (10,101,010 samples, 0.46%)</title><rect x="572.7" y="1925" width="5.4" height="15.0" fill="rgb(250,149,39)" rx="2" ry="2" />
<text  x="575.69" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1029" width="10.9" height="15.0" fill="rgb(246,11,4)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="389" width="10.9" height="15.0" fill="rgb(251,148,45)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>ros::serialization::serializeMessage&lt;msg_v_decision::msg_v_decision_&lt;std::allocator&lt;void&gt; &gt; &gt; (10,101,010 samples, 0.46%)</title><rect x="75.6" y="1909" width="5.4" height="15.0" fill="rgb(254,8,11)" rx="2" ry="2" />
<text  x="78.56" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (10,101,010 samples, 0.46%)</title><rect x="523.5" y="1941" width="5.5" height="15.0" fill="rgb(224,194,5)" rx="2" ry="2" />
<text  x="526.52" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1557" width="10.9" height="15.0" fill="rgb(247,192,52)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1349" width="10.9" height="15.0" fill="rgb(249,83,34)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" ></text>
</g>
<g >
<title>schedule (30,303,030 samples, 1.39%)</title><rect x="507.1" y="1941" width="16.4" height="15.0" fill="rgb(219,86,42)" rx="2" ry="2" />
<text  x="510.13" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1,070,707,060 samples, 49.07%)</title><rect x="10.0" y="2053" width="579.1" height="15.0" fill="rgb(229,58,7)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1509" width="10.9" height="15.0" fill="rgb(212,124,44)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" ></text>
</g>
<g >
<title>__lock_text_start (10,101,010 samples, 0.46%)</title><rect x="64.6" y="1845" width="5.5" height="15.0" fill="rgb(211,149,3)" rx="2" ry="2" />
<text  x="67.63" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1605" width="10.9" height="15.0" fill="rgb(233,12,51)" rx="2" ry="2" />
<text  x="630.31" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1733" width="10.9" height="15.0" fill="rgb(250,115,5)" rx="2" ry="2" />
<text  x="13.00" y="1743.5" ></text>
</g>
<g >
<title>rcu_core (10,101,010 samples, 0.46%)</title><rect x="605.5" y="1957" width="5.4" height="15.0" fill="rgb(237,105,14)" rx="2" ry="2" />
<text  x="608.46" y="1967.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (10,101,010 samples, 0.46%)</title><rect x="638.2" y="1733" width="5.5" height="15.0" fill="rgb(251,21,47)" rx="2" ry="2" />
<text  x="641.24" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1237" width="10.9" height="15.0" fill="rgb(211,110,46)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" ></text>
</g>
<g >
<title>vfs_write (656,565,650 samples, 30.09%)</title><rect x="102.9" y="1957" width="355.1" height="15.0" fill="rgb(206,188,10)" rx="2" ry="2" />
<text  x="105.87" y="1967.5" >vfs_write</text>
</g>
<g >
<title>sock_sendmsg (979,797,970 samples, 44.91%)</title><rect x="654.6" y="1973" width="529.9" height="15.0" fill="rgb(230,222,24)" rx="2" ry="2" />
<text  x="657.63" y="1983.5" >sock_sendmsg</text>
</g>
<g >
<title>ip_queue_xmit (40,404,040 samples, 1.85%)</title><rect x="627.3" y="1861" width="21.9" height="15.0" fill="rgb(228,187,44)" rx="2" ry="2" />
<text  x="630.31" y="1871.5" >i..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1637" width="10.9" height="15.0" fill="rgb(231,213,10)" rx="2" ry="2" />
<text  x="630.31" y="1647.5" ></text>
</g>
<g >
<title>el::base::TypedConfigurations::unsafeGetConfigByVal&lt;bool&gt; (10,101,010 samples, 0.46%)</title><rect x="26.4" y="1909" width="5.5" height="15.0" fill="rgb(242,215,14)" rx="2" ry="2" />
<text  x="29.39" y="1919.5" ></text>
</g>
<g >
<title>ep_poll (70,707,070 samples, 3.24%)</title><rect x="468.9" y="1957" width="38.2" height="15.0" fill="rgb(209,120,53)" rx="2" ry="2" />
<text  x="471.89" y="1967.5" >ep_..</text>
</g>
<g >
<title>__x64_sys_futex (10,101,010 samples, 0.46%)</title><rect x="64.6" y="1925" width="5.5" height="15.0" fill="rgb(231,209,28)" rx="2" ry="2" />
<text  x="67.63" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="133" width="10.9" height="15.0" fill="rgb(239,87,29)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>do_softirq.part.20 (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1717" width="486.2" height="15.0" fill="rgb(224,213,35)" rx="2" ry="2" />
<text  x="690.41" y="1727.5" >do_softirq.part.20</text>
</g>
<g >
<title>skb_free_head (10,101,010 samples, 0.46%)</title><rect x="627.3" y="1413" width="5.5" height="15.0" fill="rgb(221,120,31)" rx="2" ry="2" />
<text  x="630.31" y="1423.5" ></text>
</g>
<g >
<title>do_nanosleep (30,303,030 samples, 1.39%)</title><rect x="507.1" y="1957" width="16.4" height="15.0" fill="rgb(211,226,47)" rx="2" ry="2" />
<text  x="510.13" y="1967.5" ></text>
</g>
<g >
<title>aa_sk_perm (10,101,010 samples, 0.46%)</title><rect x="649.2" y="1909" width="5.4" height="15.0" fill="rgb(209,218,19)" rx="2" ry="2" />
<text  x="652.17" y="1919.5" ></text>
</g>
<g >
<title>futex_wake (10,101,010 samples, 0.46%)</title><rect x="64.6" y="1893" width="5.5" height="15.0" fill="rgb(227,208,15)" rx="2" ry="2" />
<text  x="67.63" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1605" width="10.9" height="15.0" fill="rgb(214,120,10)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>operator new[] (10,101,010 samples, 0.46%)</title><rect x="1184.5" y="2053" width="5.5" height="15.0" fill="rgb(212,59,45)" rx="2" ry="2" />
<text  x="1187.54" y="2063.5" ></text>
</g>
<g >
<title>sock_def_readable (868,686,860 samples, 39.81%)</title><rect x="703.8" y="1461" width="469.8" height="15.0" fill="rgb(217,176,14)" rx="2" ry="2" />
<text  x="706.80" y="1471.5" >sock_def_readable</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="117" width="10.9" height="15.0" fill="rgb(254,227,24)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>boost::_bi::list1&lt;boost::reference_wrapper&lt;msg_v_decision::msg_v_decision_&lt;std::allocator&lt;void&gt; &gt; const&gt; &gt;::operator (10,101,010 samples, 0.46%)</title><rect x="75.6" y="1925" width="5.4" height="15.0" fill="rgb(251,187,50)" rx="2" ry="2" />
<text  x="78.56" y="1935.5" ></text>
</g>
<g >
<title>pty_write (292,929,290 samples, 13.43%)</title><rect x="288.6" y="1893" width="158.4" height="15.0" fill="rgb(233,24,30)" rx="2" ry="2" />
<text  x="291.61" y="1903.5" >pty_write</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.46%)</title><rect x="64.6" y="1957" width="5.5" height="15.0" fill="rgb(236,117,26)" rx="2" ry="2" />
<text  x="67.63" y="1967.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (40,404,040 samples, 1.85%)</title><rect x="261.3" y="1861" width="21.8" height="15.0" fill="rgb(206,23,26)" rx="2" ry="2" />
<text  x="264.30" y="1871.5" >t..</text>
</g>
<g >
<title>boost::signals2::detail::slot_call_iterator_t&lt;boost::signals2::detail::variadic_slot_invoker&lt;boost::signals2::detail::void_type&gt;, std::_List_iterator&lt;boost::shared_ptr&lt;boost::signals2::detail::connection_body&lt;std::pair&lt;boost::signals2::detail::slot_meta_group, boost::optional&lt;int&gt; &gt;, boost::signals2::slot&lt;void  (10,101,010 samples, 0.46%)</title><rect x="10.0" y="37" width="5.5" height="15.0" fill="rgb(236,221,21)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (20,202,020 samples, 0.93%)</title><rect x="572.7" y="1973" width="10.9" height="15.0" fill="rgb(216,168,53)" rx="2" ry="2" />
<text  x="575.69" y="1983.5" ></text>
</g>
<g >
<title>__ip_finish_output (30,303,030 samples, 1.39%)</title><rect x="627.3" y="1781" width="16.4" height="15.0" fill="rgb(234,130,28)" rx="2" ry="2" />
<text  x="630.31" y="1791.5" ></text>
</g>
<g >
<title>inet_recvmsg (60,606,060 samples, 2.78%)</title><rect x="616.4" y="1957" width="32.8" height="15.0" fill="rgb(225,177,0)" rx="2" ry="2" />
<text  x="619.39" y="1967.5" >in..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="597" width="10.9" height="15.0" fill="rgb(254,94,12)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="821" width="10.9" height="15.0" fill="rgb(238,15,7)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>el::base::LogDispatcher::dispatch (20,202,020 samples, 0.93%)</title><rect x="53.7" y="1941" width="10.9" height="15.0" fill="rgb(252,54,16)" rx="2" ry="2" />
<text  x="56.70" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1573" width="10.9" height="15.0" fill="rgb(243,29,20)" rx="2" ry="2" />
<text  x="630.31" y="1583.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (30,303,030 samples, 1.39%)</title><rect x="507.1" y="1973" width="16.4" height="15.0" fill="rgb(248,90,10)" rx="2" ry="2" />
<text  x="510.13" y="1983.5" ></text>
</g>
<g >
<title>epoll_ctl (10,101,010 samples, 0.46%)</title><rect x="567.2" y="2021" width="5.5" height="15.0" fill="rgb(223,161,11)" rx="2" ry="2" />
<text  x="570.22" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="405" width="10.9" height="15.0" fill="rgb(224,140,18)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="997" width="10.9" height="15.0" fill="rgb(240,6,54)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (40,404,040 samples, 1.85%)</title><rect x="485.3" y="1941" width="21.8" height="15.0" fill="rgb(246,79,39)" rx="2" ry="2" />
<text  x="488.28" y="1951.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;el::Level, std::pair&lt;el::Level const, bool&gt;, std::allocator&lt;std::pair&lt;el::Level const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;el::Level&gt;, std::hash&lt;el::Level&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (10,101,010 samples, 0.46%)</title><rect x="26.4" y="1893" width="5.5" height="15.0" fill="rgb(223,206,8)" rx="2" ry="2" />
<text  x="29.39" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="549" width="10.9" height="15.0" fill="rgb(229,199,32)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="261" width="10.9" height="15.0" fill="rgb(206,187,7)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="693" width="10.9" height="15.0" fill="rgb(250,93,17)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (70,707,070 samples, 3.24%)</title><rect x="616.4" y="2021" width="38.2" height="15.0" fill="rgb(227,50,49)" rx="2" ry="2" />
<text  x="619.39" y="2031.5" >do_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.46%)</title><rect x="567.2" y="2005" width="5.5" height="15.0" fill="rgb(251,99,48)" rx="2" ry="2" />
<text  x="570.22" y="2015.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1557" width="10.9" height="15.0" fill="rgb(247,115,27)" rx="2" ry="2" />
<text  x="630.31" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1045" width="10.9" height="15.0" fill="rgb(220,55,31)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>ip_output (909,090,900 samples, 41.67%)</title><rect x="687.4" y="1797" width="491.7" height="15.0" fill="rgb(223,112,13)" rx="2" ry="2" />
<text  x="690.41" y="1807.5" >ip_output</text>
</g>
<g >
<title>std::lock_guard&lt;std::recursive_mutex&gt;::lock_guard (10,101,010 samples, 0.46%)</title><rect x="48.2" y="1941" width="5.5" height="15.0" fill="rgb(240,201,10)" rx="2" ry="2" />
<text  x="51.24" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1189" width="10.9" height="15.0" fill="rgb(243,94,50)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" ></text>
</g>
<g >
<title>do_softirq.part.20 (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1733" width="10.9" height="15.0" fill="rgb(254,183,42)" rx="2" ry="2" />
<text  x="630.31" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="53" width="10.9" height="15.0" fill="rgb(215,110,49)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>tcp_rcv_established (888,888,880 samples, 40.74%)</title><rect x="692.9" y="1493" width="480.7" height="15.0" fill="rgb(237,176,42)" rx="2" ry="2" />
<text  x="695.87" y="1503.5" >tcp_rcv_established</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1333" width="10.9" height="15.0" fill="rgb(239,203,41)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" ></text>
</g>
<g >
<title>__libc_malloc (40,404,040 samples, 1.85%)</title><rect x="589.1" y="2053" width="21.8" height="15.0" fill="rgb(219,9,50)" rx="2" ry="2" />
<text  x="592.07" y="2063.5" >_..</text>
</g>
<g >
<title>tcp_send_delayed_ack (10,101,010 samples, 0.46%)</title><rect x="692.9" y="1461" width="5.4" height="15.0" fill="rgb(214,72,33)" rx="2" ry="2" />
<text  x="695.87" y="1471.5" ></text>
</g>
<g >
<title>el::Logger::enabled (10,101,010 samples, 0.46%)</title><rect x="26.4" y="1957" width="5.5" height="15.0" fill="rgb(242,140,45)" rx="2" ry="2" />
<text  x="29.39" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.46%)</title><rect x="64.6" y="1941" width="5.5" height="15.0" fill="rgb(246,21,23)" rx="2" ry="2" />
<text  x="67.63" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (70,707,070 samples, 3.24%)</title><rect x="468.9" y="2021" width="38.2" height="15.0" fill="rgb(205,134,21)" rx="2" ry="2" />
<text  x="471.89" y="2031.5" >ent..</text>
</g>
<g >
<title>__lock_text_start (101,010,100 samples, 4.63%)</title><rect x="102.9" y="1845" width="54.6" height="15.0" fill="rgb(236,224,34)" rx="2" ry="2" />
<text  x="105.87" y="1855.5" >__loc..</text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (292,929,290 samples, 13.43%)</title><rect x="288.6" y="1877" width="158.4" height="15.0" fill="rgb(213,59,51)" rx="2" ry="2" />
<text  x="291.61" y="1887.5" >tty_insert_flip_stri..</text>
</g>
<g >
<title>boost::signals2::detail::connection_body_base::dec_slot_refcount&lt;boost::signals2::detail::connection_body_base&gt; (10,101,010 samples, 0.46%)</title><rect x="458.0" y="2037" width="5.4" height="15.0" fill="rgb(225,14,9)" rx="2" ry="2" />
<text  x="460.96" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="453" width="10.9" height="15.0" fill="rgb(223,86,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>tcp_data_ready (868,686,860 samples, 39.81%)</title><rect x="703.8" y="1477" width="469.8" height="15.0" fill="rgb(246,95,0)" rx="2" ry="2" />
<text  x="706.80" y="1487.5" >tcp_data_ready</text>
</g>
<g >
<title>ip_rcv_finish (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1589" width="486.2" height="15.0" fill="rgb(218,108,3)" rx="2" ry="2" />
<text  x="690.41" y="1599.5" >ip_rcv_finish</text>
</g>
<g >
<title>ipv4_dst_check (10,101,010 samples, 0.46%)</title><rect x="643.7" y="1829" width="5.5" height="15.0" fill="rgb(237,76,29)" rx="2" ry="2" />
<text  x="646.70" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1157" width="10.9" height="15.0" fill="rgb(245,95,12)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="229" width="10.9" height="15.0" fill="rgb(230,221,42)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (20,202,020 samples, 0.93%)</title><rect x="616.4" y="1925" width="10.9" height="15.0" fill="rgb(227,151,28)" rx="2" ry="2" />
<text  x="619.39" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="581" width="10.9" height="15.0" fill="rgb(206,202,47)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>__wake_up (101,010,100 samples, 4.63%)</title><rect x="102.9" y="1877" width="54.6" height="15.0" fill="rgb(227,78,39)" rx="2" ry="2" />
<text  x="105.87" y="1887.5" >__wak..</text>
</g>
<g >
<title>apic_timer_interrupt (10,101,010 samples, 0.46%)</title><rect x="605.5" y="2037" width="5.4" height="15.0" fill="rgb(247,63,43)" rx="2" ry="2" />
<text  x="608.46" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1589" width="10.9" height="15.0" fill="rgb(252,91,10)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="933" width="10.9" height="15.0" fill="rgb(243,89,39)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>__send (979,797,970 samples, 44.91%)</title><rect x="654.6" y="2053" width="529.9" height="15.0" fill="rgb(212,189,42)" rx="2" ry="2" />
<text  x="657.63" y="2063.5" >__send</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="293" width="10.9" height="15.0" fill="rgb(210,211,0)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1829" width="10.9" height="15.0" fill="rgb(206,160,9)" rx="2" ry="2" />
<text  x="13.00" y="1839.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (10,101,010 samples, 0.46%)</title><rect x="605.5" y="2021" width="5.4" height="15.0" fill="rgb(227,30,5)" rx="2" ry="2" />
<text  x="608.46" y="2031.5" ></text>
</g>
<g >
<title>process_backlog (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1653" width="486.2" height="15.0" fill="rgb(217,211,29)" rx="2" ry="2" />
<text  x="690.41" y="1663.5" >process_backlog</text>
</g>
<g >
<title>inotify_handle_event (101,010,100 samples, 4.63%)</title><rect x="102.9" y="1909" width="54.6" height="15.0" fill="rgb(234,24,43)" rx="2" ry="2" />
<text  x="105.87" y="1919.5" >inoti..</text>
</g>
<g >
<title>__wake_up_common_lock (10,101,010 samples, 0.46%)</title><rect x="698.3" y="1413" width="5.5" height="15.0" fill="rgb(244,126,4)" rx="2" ry="2" />
<text  x="701.33" y="1423.5" ></text>
</g>
<g >
<title>tcp_rcv_established (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1509" width="10.9" height="15.0" fill="rgb(215,213,12)" rx="2" ry="2" />
<text  x="630.31" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (70,707,070 samples, 3.24%)</title><rect x="468.9" y="1989" width="38.2" height="15.0" fill="rgb(206,11,29)" rx="2" ry="2" />
<text  x="471.89" y="1999.5" >__x..</text>
</g>
<g >
<title>ros::serialization::serializationLength&lt;msg_v_decision::msg_v_decision_&lt;std::allocator&lt;void&gt; &gt; &gt; (10,101,010 samples, 0.46%)</title><rect x="75.6" y="1893" width="5.4" height="15.0" fill="rgb(252,63,4)" rx="2" ry="2" />
<text  x="78.56" y="1903.5" ></text>
</g>
<g >
<title>nanosleep (30,303,030 samples, 1.39%)</title><rect x="507.1" y="2037" width="16.4" height="15.0" fill="rgb(221,127,33)" rx="2" ry="2" />
<text  x="510.13" y="2047.5" ></text>
</g>
<g >
<title>el::base::Writer::triggerDispatch (20,202,020 samples, 0.93%)</title><rect x="53.7" y="1957" width="10.9" height="15.0" fill="rgb(234,19,23)" rx="2" ry="2" />
<text  x="56.70" y="1967.5" ></text>
</g>
<g >
<title>common_file_perm (20,202,020 samples, 0.93%)</title><rect x="447.0" y="1893" width="11.0" height="15.0" fill="rgb(229,123,10)" rx="2" ry="2" />
<text  x="450.04" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30,303,030 samples, 1.39%)</title><rect x="507.1" y="2021" width="16.4" height="15.0" fill="rgb(219,199,25)" rx="2" ry="2" />
<text  x="510.13" y="2031.5" ></text>
</g>
<g >
<title>ip_local_out (909,090,900 samples, 41.67%)</title><rect x="687.4" y="1813" width="491.7" height="15.0" fill="rgb(238,183,24)" rx="2" ry="2" />
<text  x="690.41" y="1823.5" >ip_local_out</text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;el::Level const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, true&gt;::_Node_iterator (10,101,010 samples, 0.46%)</title><rect x="53.7" y="1829" width="5.5" height="15.0" fill="rgb(226,46,9)" rx="2" ry="2" />
<text  x="56.70" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="197" width="10.9" height="15.0" fill="rgb(244,125,29)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>el::base::TypedConfigurations::unsafeGetConfigByRef&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.46%)</title><rect x="53.7" y="1861" width="5.5" height="15.0" fill="rgb(233,2,50)" rx="2" ry="2" />
<text  x="56.70" y="1871.5" ></text>
</g>
<g >
<title>_cond_resched (10,101,010 samples, 0.46%)</title><rect x="283.1" y="1877" width="5.5" height="15.0" fill="rgb(213,153,25)" rx="2" ry="2" />
<text  x="286.15" y="1887.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (10,101,010 samples, 0.46%)</title><rect x="692.9" y="1477" width="5.4" height="15.0" fill="rgb(205,5,45)" rx="2" ry="2" />
<text  x="695.87" y="1487.5" ></text>
</g>
<g >
<title>sk_reset_timer (10,101,010 samples, 0.46%)</title><rect x="692.9" y="1445" width="5.4" height="15.0" fill="rgb(246,14,20)" rx="2" ry="2" />
<text  x="695.87" y="1455.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (10,101,010 samples, 0.46%)</title><rect x="621.9" y="1893" width="5.4" height="15.0" fill="rgb(217,49,44)" rx="2" ry="2" />
<text  x="624.85" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="533" width="10.9" height="15.0" fill="rgb(211,55,28)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1093" width="10.9" height="15.0" fill="rgb(207,146,28)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>ros::TransportPublisherLink::onMessage (10,101,010 samples, 0.46%)</title><rect x="561.8" y="2037" width="5.4" height="15.0" fill="rgb(222,206,10)" rx="2" ry="2" />
<text  x="564.76" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1925" width="10.9" height="15.0" fill="rgb(248,107,18)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (10,101,010 samples, 0.46%)</title><rect x="518.1" y="1845" width="5.4" height="15.0" fill="rgb(234,58,10)" rx="2" ry="2" />
<text  x="521.06" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1413" width="10.9" height="15.0" fill="rgb(226,112,50)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" ></text>
</g>
<g >
<title>__fdget_pos (10,101,010 samples, 0.46%)</title><rect x="97.4" y="1957" width="5.5" height="15.0" fill="rgb(254,54,14)" rx="2" ry="2" />
<text  x="100.41" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1 (10,101,010 samples, 0.46%)</title><rect x="42.8" y="1893" width="5.4" height="15.0" fill="rgb(227,136,32)" rx="2" ry="2" />
<text  x="45.78" y="1903.5" ></text>
</g>
<g >
<title>ros::TransportPublisherLink::handleMessage (10,101,010 samples, 0.46%)</title><rect x="556.3" y="2005" width="5.5" height="15.0" fill="rgb(254,104,6)" rx="2" ry="2" />
<text  x="559.30" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="677" width="10.9" height="15.0" fill="rgb(212,171,19)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>__ip_finish_output (909,090,900 samples, 41.67%)</title><rect x="687.4" y="1765" width="491.7" height="15.0" fill="rgb(226,200,18)" rx="2" ry="2" />
<text  x="690.41" y="1775.5" >__ip_finish_output</text>
</g>
<g >
<title>rcu_report_qs_rnp (10,101,010 samples, 0.46%)</title><rect x="605.5" y="1941" width="5.4" height="15.0" fill="rgb(233,64,31)" rx="2" ry="2" />
<text  x="608.46" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1573" width="10.9" height="15.0" fill="rgb(215,181,3)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>n_tty_write (343,434,340 samples, 15.74%)</title><rect x="261.3" y="1909" width="185.7" height="15.0" fill="rgb(214,205,0)" rx="2" ry="2" />
<text  x="264.30" y="1919.5" >n_tty_write</text>
</g>
<g >
<title>ip_finish_output (30,303,030 samples, 1.39%)</title><rect x="627.3" y="1797" width="16.4" height="15.0" fill="rgb(246,210,31)" rx="2" ry="2" />
<text  x="630.31" y="1807.5" ></text>
</g>
<g >
<title>ksys_write (666,666,660 samples, 30.56%)</title><rect x="97.4" y="1973" width="360.6" height="15.0" fill="rgb(229,182,46)" rx="2" ry="2" />
<text  x="100.41" y="1983.5" >ksys_write</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="853" width="10.9" height="15.0" fill="rgb(250,223,13)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>mod_timer (10,101,010 samples, 0.46%)</title><rect x="692.9" y="1429" width="5.4" height="15.0" fill="rgb(205,126,24)" rx="2" ry="2" />
<text  x="695.87" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="805" width="10.9" height="15.0" fill="rgb(247,46,23)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>ip_finish_output (909,090,900 samples, 41.67%)</title><rect x="687.4" y="1781" width="491.7" height="15.0" fill="rgb(226,42,3)" rx="2" ry="2" />
<text  x="690.41" y="1791.5" >ip_finish_output</text>
</g>
<g >
<title>do_softirq_own_stack (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1701" width="486.2" height="15.0" fill="rgb(212,27,14)" rx="2" ry="2" />
<text  x="690.41" y="1711.5" >do_softirq_own_stack</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="373" width="10.9" height="15.0" fill="rgb(233,226,4)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>ros::TopicManager::publish (10,101,010 samples, 0.46%)</title><rect x="75.6" y="1973" width="5.4" height="15.0" fill="rgb(236,105,33)" rx="2" ry="2" />
<text  x="78.56" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1685" width="10.9" height="15.0" fill="rgb(209,123,33)" rx="2" ry="2" />
<text  x="13.00" y="1695.5" ></text>
</g>
<g >
<title>__lock_text_start (10,101,010 samples, 0.46%)</title><rect x="518.1" y="1797" width="5.4" height="15.0" fill="rgb(220,162,36)" rx="2" ry="2" />
<text  x="521.06" y="1807.5" ></text>
</g>
<g >
<title>ros::serialization::Serializer&lt;msg_v_decision::msg_v_decision_&lt;std::allocator&lt;void&gt; &gt; &gt;::serializedLength&lt;msg_v_decision::msg_v_decision_&lt;std::allocator&lt;void&gt; &gt; &gt; (10,101,010 samples, 0.46%)</title><rect x="75.6" y="1877" width="5.4" height="15.0" fill="rgb(246,45,20)" rx="2" ry="2" />
<text  x="78.56" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="917" width="10.9" height="15.0" fill="rgb(242,52,28)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="565" width="10.9" height="15.0" fill="rgb(224,51,49)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>tcp_sendmsg (969,696,960 samples, 44.44%)</title><rect x="660.1" y="1941" width="524.4" height="15.0" fill="rgb(252,184,39)" rx="2" ry="2" />
<text  x="663.09" y="1951.5" >tcp_sendmsg</text>
</g>
<g >
<title>wake_up_q (10,101,010 samples, 0.46%)</title><rect x="64.6" y="1877" width="5.5" height="15.0" fill="rgb(230,74,3)" rx="2" ry="2" />
<text  x="67.63" y="1887.5" ></text>
</g>
<g >
<title>queue_work_on (292,929,290 samples, 13.43%)</title><rect x="288.6" y="1861" width="158.4" height="15.0" fill="rgb(244,117,42)" rx="2" ry="2" />
<text  x="291.61" y="1871.5" >queue_work_on</text>
</g>
<g >
<title>tcp_data_ready (10,101,010 samples, 0.46%)</title><rect x="698.3" y="1461" width="5.5" height="15.0" fill="rgb(239,197,5)" rx="2" ry="2" />
<text  x="701.33" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1477" width="10.9" height="15.0" fill="rgb(249,197,44)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1781" width="10.9" height="15.0" fill="rgb(249,152,21)" rx="2" ry="2" />
<text  x="13.00" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1541" width="10.9" height="15.0" fill="rgb(226,199,36)" rx="2" ry="2" />
<text  x="630.31" y="1551.5" ></text>
</g>
<g >
<title>__vfs_write (535,353,530 samples, 24.54%)</title><rect x="157.5" y="1941" width="289.5" height="15.0" fill="rgb(253,6,36)" rx="2" ry="2" />
<text  x="160.50" y="1951.5" >__vfs_write</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="85" width="10.9" height="15.0" fill="rgb(250,128,48)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (10,101,010 samples, 0.46%)</title><rect x="1179.1" y="1861" width="5.4" height="15.0" fill="rgb(237,104,4)" rx="2" ry="2" />
<text  x="1182.07" y="1871.5" ></text>
</g>
<g >
<title>ros::Subscription::~Subscription (10,101,010 samples, 0.46%)</title><rect x="556.3" y="2037" width="5.5" height="15.0" fill="rgb(206,187,15)" rx="2" ry="2" />
<text  x="559.30" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (10,101,010 samples, 0.46%)</title><rect x="518.1" y="1877" width="5.4" height="15.0" fill="rgb(254,116,24)" rx="2" ry="2" />
<text  x="521.06" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="469" width="10.9" height="15.0" fill="rgb(245,6,49)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>el::base::TypedConfigurations::filename[abi:cxx11] (10,101,010 samples, 0.46%)</title><rect x="53.7" y="1893" width="5.5" height="15.0" fill="rgb(213,100,5)" rx="2" ry="2" />
<text  x="56.70" y="1903.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (40,404,040 samples, 1.85%)</title><rect x="627.3" y="1925" width="21.9" height="15.0" fill="rgb(247,42,32)" rx="2" ry="2" />
<text  x="630.31" y="1935.5" >t..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1989" width="10.9" height="15.0" fill="rgb(220,154,49)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (40,404,040 samples, 1.85%)</title><rect x="627.3" y="1845" width="21.9" height="15.0" fill="rgb(243,154,15)" rx="2" ry="2" />
<text  x="630.31" y="1855.5" >_..</text>
</g>
<g >
<title>skb_entail (10,101,010 samples, 0.46%)</title><rect x="671.0" y="1909" width="5.5" height="15.0" fill="rgb(227,180,50)" rx="2" ry="2" />
<text  x="674.02" y="1919.5" ></text>
</g>
<g >
<title>finish_task_switch (30,303,030 samples, 1.39%)</title><rect x="507.1" y="1909" width="16.4" height="15.0" fill="rgb(228,5,35)" rx="2" ry="2" />
<text  x="510.13" y="1919.5" ></text>
</g>
<g >
<title>do_epoll_wait (70,707,070 samples, 3.24%)</title><rect x="468.9" y="1973" width="38.2" height="15.0" fill="rgb(249,1,11)" rx="2" ry="2" />
<text  x="471.89" y="1983.5" >do_..</text>
</g>
<g >
<title>node_vehicle_de (2,181,818,160 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(236,203,2)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >node_vehicle_de</text>
</g>
<g >
<title>tcp_push (939,393,930 samples, 43.06%)</title><rect x="676.5" y="1909" width="508.0" height="15.0" fill="rgb(250,18,28)" rx="2" ry="2" />
<text  x="679.48" y="1919.5" >tcp_push</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="645" width="10.9" height="15.0" fill="rgb(242,197,28)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>__recv (80,808,080 samples, 3.70%)</title><rect x="610.9" y="2053" width="43.7" height="15.0" fill="rgb(244,206,29)" rx="2" ry="2" />
<text  x="613.93" y="2063.5" >__recv</text>
</g>
<g >
<title>__softirqentry_text_start (10,101,010 samples, 0.46%)</title><rect x="605.5" y="1989" width="5.4" height="15.0" fill="rgb(219,62,51)" rx="2" ry="2" />
<text  x="608.46" y="1999.5" ></text>
</g>
<g >
<title>__lock_text_start (10,101,010 samples, 0.46%)</title><rect x="692.9" y="1413" width="5.4" height="15.0" fill="rgb(218,105,27)" rx="2" ry="2" />
<text  x="695.87" y="1423.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (10,101,010 samples, 0.46%)</title><rect x="698.3" y="1429" width="5.5" height="15.0" fill="rgb(214,74,21)" rx="2" ry="2" />
<text  x="701.33" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="357" width="10.9" height="15.0" fill="rgb(227,154,12)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (666,666,660 samples, 30.56%)</title><rect x="97.4" y="1989" width="360.6" height="15.0" fill="rgb(205,3,38)" rx="2" ry="2" />
<text  x="100.41" y="1999.5" >__x64_sys_write</text>
</g>
<g >
<title>el::base::Writer::construct (50,505,050 samples, 2.31%)</title><rect x="26.4" y="1989" width="27.3" height="15.0" fill="rgb(224,56,3)" rx="2" ry="2" />
<text  x="29.39" y="1999.5" >e..</text>
</g>
<g >
<title>rw_verify_area (20,202,020 samples, 0.93%)</title><rect x="447.0" y="1941" width="11.0" height="15.0" fill="rgb(234,203,17)" rx="2" ry="2" />
<text  x="450.04" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (10,101,010 samples, 0.46%)</title><rect x="37.3" y="1893" width="5.5" height="15.0" fill="rgb(229,172,11)" rx="2" ry="2" />
<text  x="40.31" y="1903.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (969,696,960 samples, 44.44%)</title><rect x="660.1" y="1925" width="524.4" height="15.0" fill="rgb(241,91,29)" rx="2" ry="2" />
<text  x="663.09" y="1935.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>el::base::TypedConfigurations::enabled (10,101,010 samples, 0.46%)</title><rect x="26.4" y="1941" width="5.5" height="15.0" fill="rgb(246,109,19)" rx="2" ry="2" />
<text  x="29.39" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1285" width="10.9" height="15.0" fill="rgb(225,94,48)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" ></text>
</g>
<g >
<title>__fsnotify_parent (101,010,100 samples, 4.63%)</title><rect x="102.9" y="1941" width="54.6" height="15.0" fill="rgb(216,102,26)" rx="2" ry="2" />
<text  x="105.87" y="1951.5" >__fsn..</text>
</g>
<g >
<title>do_syscall_64 (30,303,030 samples, 1.39%)</title><rect x="507.1" y="2005" width="16.4" height="15.0" fill="rgb(226,24,13)" rx="2" ry="2" />
<text  x="510.13" y="2015.5" ></text>
</g>
<g >
<title>__sched_text_start (10,101,010 samples, 0.46%)</title><rect x="283.1" y="1861" width="5.5" height="15.0" fill="rgb(235,75,10)" rx="2" ry="2" />
<text  x="286.15" y="1871.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;ros::SerializedMessage, ros::SerializedMessage  (10,101,010 samples, 0.46%)</title><rect x="75.6" y="1941" width="5.4" height="15.0" fill="rgb(213,85,31)" rx="2" ry="2" />
<text  x="78.56" y="1951.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (20,202,020 samples, 0.93%)</title><rect x="616.4" y="1909" width="10.9" height="15.0" fill="rgb(224,211,52)" rx="2" ry="2" />
<text  x="619.39" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1637" width="10.9" height="15.0" fill="rgb(212,202,46)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1701" width="10.9" height="15.0" fill="rgb(243,59,19)" rx="2" ry="2" />
<text  x="630.31" y="1711.5" ></text>
</g>
<g >
<title>el::base::Writer::initializeLogger (50,505,050 samples, 2.31%)</title><rect x="26.4" y="1973" width="27.3" height="15.0" fill="rgb(232,171,17)" rx="2" ry="2" />
<text  x="29.39" y="1983.5" >e..</text>
</g>
<g >
<title>__fdget_pos (10,101,010 samples, 0.46%)</title><rect x="523.5" y="1957" width="5.5" height="15.0" fill="rgb(215,59,11)" rx="2" ry="2" />
<text  x="526.52" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1365" width="10.9" height="15.0" fill="rgb(213,164,20)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" ></text>
</g>
<g >
<title>tcp_write_xmit (929,292,920 samples, 42.59%)</title><rect x="681.9" y="1877" width="502.6" height="15.0" fill="rgb(225,90,49)" rx="2" ry="2" />
<text  x="684.94" y="1887.5" >tcp_write_xmit</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1749" width="10.9" height="15.0" fill="rgb(223,191,42)" rx="2" ry="2" />
<text  x="13.00" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1461" width="10.9" height="15.0" fill="rgb(234,128,48)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (181,818,180 samples, 8.33%)</title><rect x="163.0" y="1893" width="98.3" height="15.0" fill="rgb(232,156,52)" rx="2" ry="2" />
<text  x="165.96" y="1903.5" >__wake_up_s..</text>
</g>
<g >
<title>ip_finish_output2 (30,303,030 samples, 1.39%)</title><rect x="627.3" y="1765" width="16.4" height="15.0" fill="rgb(205,127,30)" rx="2" ry="2" />
<text  x="630.31" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1621" width="10.9" height="15.0" fill="rgb(254,229,1)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>ip_queue_xmit (909,090,900 samples, 41.67%)</title><rect x="687.4" y="1845" width="491.7" height="15.0" fill="rgb(239,87,50)" rx="2" ry="2" />
<text  x="690.41" y="1855.5" >ip_queue_xmit</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="2005" width="10.9" height="15.0" fill="rgb(248,105,28)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (10,101,010 samples, 0.46%)</title><rect x="48.2" y="1893" width="5.5" height="15.0" fill="rgb(244,71,36)" rx="2" ry="2" />
<text  x="51.24" y="1903.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.45 (40,404,040 samples, 1.85%)</title><rect x="627.3" y="1893" width="21.9" height="15.0" fill="rgb(245,45,32)" rx="2" ry="2" />
<text  x="630.31" y="1903.5" >_..</text>
</g>
<g >
<title>__lock_text_start (10,101,010 samples, 0.46%)</title><rect x="698.3" y="1397" width="5.5" height="15.0" fill="rgb(219,209,27)" rx="2" ry="2" />
<text  x="701.33" y="1407.5" ></text>
</g>
<g >
<title>__tcp_select_window (10,101,010 samples, 0.46%)</title><rect x="681.9" y="1861" width="5.5" height="15.0" fill="rgb(243,177,26)" rx="2" ry="2" />
<text  x="684.94" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (10,101,010 samples, 0.46%)</title><rect x="37.3" y="1845" width="5.5" height="15.0" fill="rgb(210,52,20)" rx="2" ry="2" />
<text  x="40.31" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (10,101,010 samples, 0.46%)</title><rect x="518.1" y="1893" width="5.4" height="15.0" fill="rgb(251,140,48)" rx="2" ry="2" />
<text  x="521.06" y="1903.5" ></text>
</g>
<g >
<title>el::base::TypedConfigurations::getConfigByVal&lt;bool&gt; (10,101,010 samples, 0.46%)</title><rect x="26.4" y="1925" width="5.5" height="15.0" fill="rgb(223,73,13)" rx="2" ry="2" />
<text  x="29.39" y="1935.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1541" width="486.2" height="15.0" fill="rgb(233,125,12)" rx="2" ry="2" />
<text  x="690.41" y="1551.5" >ip_protocol_deliver_rcu</text>
</g>
<g >
<title>fsnotify (101,010,100 samples, 4.63%)</title><rect x="102.9" y="1925" width="54.6" height="15.0" fill="rgb(237,23,7)" rx="2" ry="2" />
<text  x="105.87" y="1935.5" >fsnot..</text>
</g>
<g >
<title>ros::serialization::serializationLength&lt;unsigned char&gt; (10,101,010 samples, 0.46%)</title><rect x="75.6" y="1845" width="5.4" height="15.0" fill="rgb(241,213,24)" rx="2" ry="2" />
<text  x="78.56" y="1855.5" ></text>
</g>
<g >
<title>el::LogDispatchCallback::handle (20,202,020 samples, 0.93%)</title><rect x="53.7" y="1909" width="10.9" height="15.0" fill="rgb(244,139,45)" rx="2" ry="2" />
<text  x="56.70" y="1919.5" ></text>
</g>
<g >
<title>all (2,181,818,160 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(245,215,0)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1749" width="10.9" height="15.0" fill="rgb(227,181,36)" rx="2" ry="2" />
<text  x="630.31" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="901" width="10.9" height="15.0" fill="rgb(208,171,22)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="165" width="10.9" height="15.0" fill="rgb(227,156,28)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>tcp_ack (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1493" width="10.9" height="15.0" fill="rgb(250,199,4)" rx="2" ry="2" />
<text  x="630.31" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="789" width="10.9" height="15.0" fill="rgb(231,120,53)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>pipe_write (191,919,190 samples, 8.80%)</title><rect x="157.5" y="1909" width="103.8" height="15.0" fill="rgb(236,164,4)" rx="2" ry="2" />
<text  x="160.50" y="1919.5" >pipe_write</text>
</g>
<g >
<title>skb_release_all (10,101,010 samples, 0.46%)</title><rect x="627.3" y="1445" width="5.5" height="15.0" fill="rgb(217,75,52)" rx="2" ry="2" />
<text  x="630.31" y="1455.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (10,101,010 samples, 0.46%)</title><rect x="81.0" y="1989" width="5.5" height="15.0" fill="rgb(253,54,25)" rx="2" ry="2" />
<text  x="84.02" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1605" width="486.2" height="15.0" fill="rgb(239,207,3)" rx="2" ry="2" />
<text  x="690.41" y="1615.5" >ip_rcv</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="437" width="10.9" height="15.0" fill="rgb(249,55,48)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="485" width="10.9" height="15.0" fill="rgb(231,157,45)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1013" width="10.9" height="15.0" fill="rgb(248,36,15)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1957" width="10.9" height="15.0" fill="rgb(217,174,10)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="101" width="10.9" height="15.0" fill="rgb(245,210,9)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>ros::PollSet::update (20,202,020 samples, 0.93%)</title><rect x="539.9" y="2021" width="10.9" height="15.0" fill="rgb(230,42,21)" rx="2" ry="2" />
<text  x="542.91" y="2031.5" ></text>
</g>
<g >
<title>el::base::utils::Registry&lt;el::Logger, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (30,303,030 samples, 1.39%)</title><rect x="31.9" y="1941" width="16.3" height="15.0" fill="rgb(245,89,39)" rx="2" ry="2" />
<text  x="34.85" y="1951.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.16 (20,202,020 samples, 0.93%)</title><rect x="572.7" y="1941" width="10.9" height="15.0" fill="rgb(208,26,38)" rx="2" ry="2" />
<text  x="575.69" y="1951.5" ></text>
</g>
<g >
<title>__sb_start_write (10,101,010 samples, 0.46%)</title><rect x="157.5" y="1893" width="5.5" height="15.0" fill="rgb(251,46,36)" rx="2" ry="2" />
<text  x="160.50" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1621" width="486.2" height="15.0" fill="rgb(233,48,3)" rx="2" ry="2" />
<text  x="690.41" y="1631.5" >__netif_receive_skb_one_core</text>
</g>
<g >
<title>__ip_queue_xmit (909,090,900 samples, 41.67%)</title><rect x="687.4" y="1829" width="491.7" height="15.0" fill="rgb(249,176,23)" rx="2" ry="2" />
<text  x="690.41" y="1839.5" >__ip_queue_xmit</text>
</g>
<g >
<title>aa_file_perm (20,202,020 samples, 0.93%)</title><rect x="447.0" y="1877" width="11.0" height="15.0" fill="rgb(210,124,44)" rx="2" ry="2" />
<text  x="450.04" y="1887.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (868,686,860 samples, 39.81%)</title><rect x="703.8" y="1429" width="469.8" height="15.0" fill="rgb(217,98,22)" rx="2" ry="2" />
<text  x="706.80" y="1439.5" >__wake_up_common_lock</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1701" width="10.9" height="15.0" fill="rgb(240,47,0)" rx="2" ry="2" />
<text  x="13.00" y="1711.5" ></text>
</g>
<g >
<title>ip_output (30,303,030 samples, 1.39%)</title><rect x="627.3" y="1813" width="16.4" height="15.0" fill="rgb(223,53,28)" rx="2" ry="2" />
<text  x="630.31" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1317" width="10.9" height="15.0" fill="rgb(233,33,10)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (939,393,930 samples, 43.06%)</title><rect x="676.5" y="1893" width="508.0" height="15.0" fill="rgb(252,95,38)" rx="2" ry="2" />
<text  x="679.48" y="1903.5" >__tcp_push_pending_frames</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 0.93%)</title><rect x="572.7" y="2005" width="10.9" height="15.0" fill="rgb(235,119,23)" rx="2" ry="2" />
<text  x="575.69" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="709" width="10.9" height="15.0" fill="rgb(206,210,10)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>update_blocked_averages (10,101,010 samples, 0.46%)</title><rect x="518.1" y="1813" width="5.4" height="15.0" fill="rgb(219,218,33)" rx="2" ry="2" />
<text  x="521.06" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="725" width="10.9" height="15.0" fill="rgb(224,171,7)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>ros::poll_sockets (10,101,010 samples, 0.46%)</title><rect x="550.8" y="2021" width="5.5" height="15.0" fill="rgb(212,51,8)" rx="2" ry="2" />
<text  x="553.83" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output2 (909,090,900 samples, 41.67%)</title><rect x="687.4" y="1749" width="491.7" height="15.0" fill="rgb(253,44,54)" rx="2" ry="2" />
<text  x="690.41" y="1759.5" >ip_finish_output2</text>
</g>
<g >
<title>__ksize (10,101,010 samples, 0.46%)</title><rect x="660.1" y="1877" width="5.5" height="15.0" fill="rgb(233,148,8)" rx="2" ry="2" />
<text  x="663.09" y="1887.5" ></text>
</g>
<g >
<title>boost::detail::function::function_obj_invoker0&lt;boost::_bi::bind_t&lt;ros::SerializedMessage, ros::SerializedMessage  (10,101,010 samples, 0.46%)</title><rect x="75.6" y="1957" width="5.4" height="15.0" fill="rgb(220,83,49)" rx="2" ry="2" />
<text  x="78.56" y="1967.5" ></text>
</g>
<g >
<title>__write (666,666,660 samples, 30.56%)</title><rect x="97.4" y="2037" width="360.6" height="15.0" fill="rgb(209,70,14)" rx="2" ry="2" />
<text  x="100.41" y="2047.5" >__write</text>
</g>
<g >
<title>__x64_sys_nanosleep (30,303,030 samples, 1.39%)</title><rect x="507.1" y="1989" width="16.4" height="15.0" fill="rgb(209,61,32)" rx="2" ry="2" />
<text  x="510.13" y="1999.5" ></text>
</g>
<g >
<title>do_output_char (40,404,040 samples, 1.85%)</title><rect x="261.3" y="1893" width="21.8" height="15.0" fill="rgb(248,207,38)" rx="2" ry="2" />
<text  x="264.30" y="1903.5" >d..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="773" width="10.9" height="15.0" fill="rgb(242,9,39)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="309" width="10.9" height="15.0" fill="rgb(206,136,13)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (10,101,010 samples, 0.46%)</title><rect x="676.5" y="1877" width="5.4" height="15.0" fill="rgb(219,93,25)" rx="2" ry="2" />
<text  x="679.48" y="1887.5" ></text>
</g>
<g >
<title>swake_up_one (10,101,010 samples, 0.46%)</title><rect x="605.5" y="1909" width="5.4" height="15.0" fill="rgb(224,59,4)" rx="2" ry="2" />
<text  x="608.46" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (30,303,030 samples, 1.39%)</title><rect x="627.3" y="1829" width="16.4" height="15.0" fill="rgb(205,130,50)" rx="2" ry="2" />
<text  x="630.31" y="1839.5" ></text>
</g>
<g >
<title>ros::PollManager::threadFunc (50,505,050 samples, 2.31%)</title><rect x="529.0" y="2037" width="27.3" height="15.0" fill="rgb(248,41,2)" rx="2" ry="2" />
<text  x="531.98" y="2047.5" >r..</text>
</g>
<g >
<title>ip_local_deliver (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1589" width="10.9" height="15.0" fill="rgb(237,200,38)" rx="2" ry="2" />
<text  x="630.31" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1653" width="10.9" height="15.0" fill="rgb(212,26,50)" rx="2" ry="2" />
<text  x="13.00" y="1663.5" ></text>
</g>
<g >
<title>pty_write (40,404,040 samples, 1.85%)</title><rect x="261.3" y="1877" width="21.8" height="15.0" fill="rgb(250,102,35)" rx="2" ry="2" />
<text  x="264.30" y="1887.5" >p..</text>
</g>
<g >
<title>std::recursive_mutex::lock (10,101,010 samples, 0.46%)</title><rect x="48.2" y="1925" width="5.5" height="15.0" fill="rgb(246,69,44)" rx="2" ry="2" />
<text  x="51.24" y="1935.5" ></text>
</g>
<g >
<title>el::base::Writer::construct (10,101,010 samples, 0.46%)</title><rect x="86.5" y="2005" width="5.4" height="15.0" fill="rgb(252,180,48)" rx="2" ry="2" />
<text  x="89.48" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::_M_realloc_insert&lt;pollfd const&amp;&gt; (10,101,010 samples, 0.46%)</title><rect x="20.9" y="2021" width="5.5" height="15.0" fill="rgb(219,16,40)" rx="2" ry="2" />
<text  x="23.93" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1125" width="10.9" height="15.0" fill="rgb(239,224,15)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" ></text>
</g>
<g >
<title>net_rx_action (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1669" width="486.2" height="15.0" fill="rgb(249,55,0)" rx="2" ry="2" />
<text  x="690.41" y="1679.5" >net_rx_action</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="149" width="10.9" height="15.0" fill="rgb(244,112,53)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>ros::serialization::Serializer&lt;msg_v_decision::msg_v_decision_&lt;std::allocator&lt;void&gt; &gt; &gt;::allInOne&lt;ros::serialization::LStream, msg_v_decision::msg_v_decision_&lt;std::allocator&lt;void&gt; &gt; const&amp;&gt; (10,101,010 samples, 0.46%)</title><rect x="75.6" y="1861" width="5.4" height="15.0" fill="rgb(248,212,47)" rx="2" ry="2" />
<text  x="78.56" y="1871.5" ></text>
</g>
<g >
<title>__kfree_skb (10,101,010 samples, 0.46%)</title><rect x="627.3" y="1461" width="5.5" height="15.0" fill="rgb(244,88,22)" rx="2" ry="2" />
<text  x="630.31" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1525" width="10.9" height="15.0" fill="rgb(246,89,51)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" ></text>
</g>
<g >
<title>__sys_sendto (979,797,970 samples, 44.91%)</title><rect x="654.6" y="1989" width="529.9" height="15.0" fill="rgb(214,35,7)" rx="2" ry="2" />
<text  x="657.63" y="1999.5" >__sys_sendto</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="965" width="10.9" height="15.0" fill="rgb(248,224,27)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1141" width="10.9" height="15.0" fill="rgb(241,141,5)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" ></text>
</g>
<g >
<title>kfree (10,101,010 samples, 0.46%)</title><rect x="627.3" y="1397" width="5.5" height="15.0" fill="rgb(253,63,34)" rx="2" ry="2" />
<text  x="630.31" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="869" width="10.9" height="15.0" fill="rgb(232,96,19)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1909" width="10.9" height="15.0" fill="rgb(215,97,31)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>skb_release_data (10,101,010 samples, 0.46%)</title><rect x="627.3" y="1429" width="5.5" height="15.0" fill="rgb(220,115,16)" rx="2" ry="2" />
<text  x="630.31" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.46%)</title><rect x="523.5" y="2021" width="5.5" height="15.0" fill="rgb(245,190,45)" rx="2" ry="2" />
<text  x="526.52" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (979,797,970 samples, 44.91%)</title><rect x="654.6" y="2021" width="529.9" height="15.0" fill="rgb(224,218,27)" rx="2" ry="2" />
<text  x="657.63" y="2031.5" >do_syscall_64</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1669" width="10.9" height="15.0" fill="rgb(233,142,31)" rx="2" ry="2" />
<text  x="13.00" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10,101,010 samples, 0.46%)</title><rect x="31.9" y="1893" width="5.4" height="15.0" fill="rgb(210,227,38)" rx="2" ry="2" />
<text  x="34.85" y="1903.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1477" width="10.9" height="15.0" fill="rgb(232,150,7)" rx="2" ry="2" />
<text  x="630.31" y="1487.5" ></text>
</g>
<g >
<title>el::base::Writer::processDispatch (20,202,020 samples, 0.93%)</title><rect x="53.7" y="1973" width="10.9" height="15.0" fill="rgb(241,199,29)" rx="2" ry="2" />
<text  x="56.70" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1573" width="486.2" height="15.0" fill="rgb(206,23,30)" rx="2" ry="2" />
<text  x="690.41" y="1583.5" >ip_local_deliver</text>
</g>
<g >
<title>tcp_stream_memory_free (10,101,010 samples, 0.46%)</title><rect x="572.7" y="1909" width="5.4" height="15.0" fill="rgb(248,184,50)" rx="2" ry="2" />
<text  x="575.69" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1653" width="10.9" height="15.0" fill="rgb(247,155,10)" rx="2" ry="2" />
<text  x="630.31" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1525" width="10.9" height="15.0" fill="rgb(206,203,20)" rx="2" ry="2" />
<text  x="630.31" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1109" width="10.9" height="15.0" fill="rgb(239,150,10)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" ></text>
</g>
<g >
<title>epoll_ctl (20,202,020 samples, 0.93%)</title><rect x="572.7" y="2021" width="10.9" height="15.0" fill="rgb(254,183,13)" rx="2" ry="2" />
<text  x="575.69" y="2031.5" ></text>
</g>
<g >
<title>dev_queue_xmit (10,101,010 samples, 0.46%)</title><rect x="638.2" y="1749" width="5.5" height="15.0" fill="rgb(237,20,13)" rx="2" ry="2" />
<text  x="641.24" y="1759.5" ></text>
</g>
<g >
<title>__lock_text_start (868,686,860 samples, 39.81%)</title><rect x="703.8" y="1413" width="469.8" height="15.0" fill="rgb(205,226,5)" rx="2" ry="2" />
<text  x="706.80" y="1423.5" >__lock_text_start</text>
</g>
<g >
<title>do_syscall_64 (70,707,070 samples, 3.24%)</title><rect x="468.9" y="2005" width="38.2" height="15.0" fill="rgb(234,151,1)" rx="2" ry="2" />
<text  x="471.89" y="2015.5" >do_..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="613" width="10.9" height="15.0" fill="rgb(241,211,28)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (40,404,040 samples, 1.85%)</title><rect x="627.3" y="1877" width="21.9" height="15.0" fill="rgb(245,139,4)" rx="2" ry="2" />
<text  x="630.31" y="1887.5" >_..</text>
</g>
<g >
<title>rcu_core_si (10,101,010 samples, 0.46%)</title><rect x="605.5" y="1973" width="5.4" height="15.0" fill="rgb(230,71,28)" rx="2" ry="2" />
<text  x="608.46" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (666,666,660 samples, 30.56%)</title><rect x="97.4" y="2005" width="360.6" height="15.0" fill="rgb(241,191,26)" rx="2" ry="2" />
<text  x="100.41" y="2015.5" >do_syscall_64</text>
</g>
<g >
<title>new_sync_write (191,919,190 samples, 8.80%)</title><rect x="157.5" y="1925" width="103.8" height="15.0" fill="rgb(210,38,38)" rx="2" ry="2" />
<text  x="160.50" y="1935.5" >new_sync_write</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (666,666,660 samples, 30.56%)</title><rect x="97.4" y="2021" width="360.6" height="15.0" fill="rgb(223,72,44)" rx="2" ry="2" />
<text  x="100.41" y="2031.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__lll_unlock_wake (10,101,010 samples, 0.46%)</title><rect x="64.6" y="1973" width="5.5" height="15.0" fill="rgb(240,99,13)" rx="2" ry="2" />
<text  x="67.63" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1685" width="10.9" height="15.0" fill="rgb(226,9,46)" rx="2" ry="2" />
<text  x="630.31" y="1695.5" ></text>
</g>
<g >
<title>ros::Publisher::publish&lt;msg_v_decision::msg_v_decision_&lt;std::allocator&lt;void&gt; &gt; &gt; (30,303,030 samples, 1.39%)</title><rect x="64.6" y="1989" width="16.4" height="15.0" fill="rgb(219,167,11)" rx="2" ry="2" />
<text  x="67.63" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1445" width="10.9" height="15.0" fill="rgb(213,202,53)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" ></text>
</g>
<g >
<title>__fget_light (10,101,010 samples, 0.46%)</title><rect x="97.4" y="1941" width="5.5" height="15.0" fill="rgb(232,166,33)" rx="2" ry="2" />
<text  x="100.41" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="949" width="10.9" height="15.0" fill="rgb(208,35,17)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_lock (10,101,010 samples, 0.46%)</title><rect x="48.2" y="1909" width="5.5" height="15.0" fill="rgb(220,30,36)" rx="2" ry="2" />
<text  x="51.24" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1493" width="10.9" height="15.0" fill="rgb(231,178,0)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1973" width="10.9" height="15.0" fill="rgb(206,111,8)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="277" width="10.9" height="15.0" fill="rgb(235,57,48)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (979,797,970 samples, 44.91%)</title><rect x="654.6" y="2037" width="529.9" height="15.0" fill="rgb(254,86,47)" rx="2" ry="2" />
<text  x="657.63" y="2047.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>tcp_recvmsg (60,606,060 samples, 2.78%)</title><rect x="616.4" y="1941" width="32.8" height="15.0" fill="rgb(250,57,47)" rx="2" ry="2" />
<text  x="619.39" y="1951.5" >tc..</text>
</g>
<g >
<title>ros::TransportTCP::enableWrite (20,202,020 samples, 0.93%)</title><rect x="572.7" y="2037" width="10.9" height="15.0" fill="rgb(237,49,29)" rx="2" ry="2" />
<text  x="575.69" y="2047.5" ></text>
</g>
<g >
<title>queue_work_on (40,404,040 samples, 1.85%)</title><rect x="261.3" y="1845" width="21.8" height="15.0" fill="rgb(245,224,18)" rx="2" ry="2" />
<text  x="264.30" y="1855.5" >q..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1877" width="10.9" height="15.0" fill="rgb(239,32,51)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" ></text>
</g>
<g >
<title>sock_def_readable (10,101,010 samples, 0.46%)</title><rect x="698.3" y="1445" width="5.5" height="15.0" fill="rgb(209,162,32)" rx="2" ry="2" />
<text  x="701.33" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1173" width="10.9" height="15.0" fill="rgb(228,80,5)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" ></text>
</g>
<g >
<title>__netif_receive_skb (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1637" width="486.2" height="15.0" fill="rgb(225,26,52)" rx="2" ry="2" />
<text  x="690.41" y="1647.5" >__netif_receive_skb</text>
</g>
<g >
<title>ros::Connection::readTransport (10,101,010 samples, 0.46%)</title><rect x="583.6" y="2021" width="5.5" height="15.0" fill="rgb(226,133,53)" rx="2" ry="2" />
<text  x="586.61" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (898,989,890 samples, 41.20%)</title><rect x="687.4" y="1525" width="486.2" height="15.0" fill="rgb(210,92,7)" rx="2" ry="2" />
<text  x="690.41" y="1535.5" >tcp_v4_rcv</text>
</g>
<g >
<title>rcu_gp_kthread_wake (10,101,010 samples, 0.46%)</title><rect x="605.5" y="1925" width="5.4" height="15.0" fill="rgb(252,81,50)" rx="2" ry="2" />
<text  x="608.46" y="1935.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (10,101,010 samples, 0.46%)</title><rect x="632.8" y="1445" width="5.4" height="15.0" fill="rgb(241,38,15)" rx="2" ry="2" />
<text  x="635.78" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="2021" width="10.9" height="15.0" fill="rgb(205,92,4)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>tty_write (343,434,340 samples, 15.74%)</title><rect x="261.3" y="1925" width="185.7" height="15.0" fill="rgb(244,13,49)" rx="2" ry="2" />
<text  x="264.30" y="1935.5" >tty_write</text>
</g>
<g >
<title>process_backlog (20,202,020 samples, 0.93%)</title><rect x="627.3" y="1669" width="10.9" height="15.0" fill="rgb(226,78,16)" rx="2" ry="2" />
<text  x="630.31" y="1679.5" ></text>
</g>
<g >
<title>__sched_text_start (30,303,030 samples, 1.39%)</title><rect x="507.1" y="1925" width="16.4" height="15.0" fill="rgb(254,163,25)" rx="2" ry="2" />
<text  x="510.13" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1717" width="10.9" height="15.0" fill="rgb(219,38,27)" rx="2" ry="2" />
<text  x="13.00" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (10,101,010 samples, 0.46%)</title><rect x="605.5" y="2005" width="5.4" height="15.0" fill="rgb(227,56,44)" rx="2" ry="2" />
<text  x="608.46" y="2015.5" ></text>
</g>
<g >
<title>mutex_lock (10,101,010 samples, 0.46%)</title><rect x="283.1" y="1893" width="5.5" height="15.0" fill="rgb(219,46,27)" rx="2" ry="2" />
<text  x="286.15" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1269" width="10.9" height="15.0" fill="rgb(206,188,31)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1221" width="10.9" height="15.0" fill="rgb(215,74,44)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" ></text>
</g>
<g >
<title>el::base::TypedConfigurations::getConfigByRef&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.46%)</title><rect x="53.7" y="1877" width="5.5" height="15.0" fill="rgb(205,62,46)" rx="2" ry="2" />
<text  x="56.70" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1941" width="10.9" height="15.0" fill="rgb(221,63,6)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>el::base::Writer::~Writer (20,202,020 samples, 0.93%)</title><rect x="53.7" y="1989" width="10.9" height="15.0" fill="rgb(251,78,40)" rx="2" ry="2" />
<text  x="56.70" y="1999.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (10,101,010 samples, 0.46%)</title><rect x="687.4" y="1509" width="5.5" height="15.0" fill="rgb(220,58,30)" rx="2" ry="2" />
<text  x="690.41" y="1519.5" ></text>
</g>
<g >
<title>do_futex (10,101,010 samples, 0.46%)</title><rect x="64.6" y="1909" width="5.5" height="15.0" fill="rgb(238,130,43)" rx="2" ry="2" />
<text  x="67.63" y="1919.5" ></text>
</g>
<g >
<title>ep_modify (20,202,020 samples, 0.93%)</title><rect x="572.7" y="1957" width="10.9" height="15.0" fill="rgb(232,180,36)" rx="2" ry="2" />
<text  x="575.69" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 1.39%)</title><rect x="10.0" y="2037" width="16.4" height="15.0" fill="rgb(230,1,51)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, ros::TransportTCP, int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;ros::TransportTCP*&gt;, boost::arg&lt;1&gt; &gt; &gt;, void, int&gt;::invoke (10,101,010 samples, 0.46%)</title><rect x="529.0" y="2021" width="5.4" height="15.0" fill="rgb(234,166,14)" rx="2" ry="2" />
<text  x="531.98" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="421" width="10.9" height="15.0" fill="rgb(233,53,32)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1253" width="10.9" height="15.0" fill="rgb(244,75,12)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="981" width="10.9" height="15.0" fill="rgb(211,21,26)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>_copy_from_user (10,101,010 samples, 0.46%)</title><rect x="567.2" y="1973" width="5.5" height="15.0" fill="rgb(225,200,34)" rx="2" ry="2" />
<text  x="570.22" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="885" width="10.9" height="15.0" fill="rgb(206,125,35)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="517" width="10.9" height="15.0" fill="rgb(234,132,53)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>tcp_poll (10,101,010 samples, 0.46%)</title><rect x="578.1" y="1925" width="5.5" height="15.0" fill="rgb(226,228,9)" rx="2" ry="2" />
<text  x="581.15" y="1935.5" ></text>
</g>
<g >
<title>__lock_text_start (181,818,180 samples, 8.33%)</title><rect x="163.0" y="1861" width="98.3" height="15.0" fill="rgb(248,114,46)" rx="2" ry="2" />
<text  x="165.96" y="1871.5" >__lock_text..</text>
</g>
<g >
<title>apparmor_file_permission (20,202,020 samples, 0.93%)</title><rect x="447.0" y="1909" width="11.0" height="15.0" fill="rgb(243,63,45)" rx="2" ry="2" />
<text  x="450.04" y="1919.5" ></text>
</g>
<g >
<title>run_rebalance_domains (10,101,010 samples, 0.46%)</title><rect x="518.1" y="1829" width="5.4" height="15.0" fill="rgb(249,54,3)" rx="2" ry="2" />
<text  x="521.06" y="1839.5" ></text>
</g>
<g >
<title>ros::TransportTCP::disableWrite (10,101,010 samples, 0.46%)</title><rect x="567.2" y="2037" width="5.5" height="15.0" fill="rgb(232,24,53)" rx="2" ry="2" />
<text  x="570.22" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, el::Logger*&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (10,101,010 samples, 0.46%)</title><rect x="37.3" y="1861" width="5.5" height="15.0" fill="rgb(224,174,10)" rx="2" ry="2" />
<text  x="40.31" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;el::Level, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;el::Level&gt;, std::equal_to&lt;el::Level&gt;, std::allocator&lt;std::pair&lt;el::Level const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (10,101,010 samples, 0.46%)</title><rect x="53.7" y="1845" width="5.5" height="15.0" fill="rgb(237,218,11)" rx="2" ry="2" />
<text  x="56.70" y="1855.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (10,101,010 samples, 0.46%)</title><rect x="649.2" y="1941" width="5.4" height="15.0" fill="rgb(244,18,35)" rx="2" ry="2" />
<text  x="652.17" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1845" width="10.9" height="15.0" fill="rgb(207,32,42)" rx="2" ry="2" />
<text  x="13.00" y="1855.5" ></text>
</g>
<g >
<title>main (121,212,120 samples, 5.56%)</title><rect x="26.4" y="2021" width="65.5" height="15.0" fill="rgb(233,31,31)" rx="2" ry="2" />
<text  x="29.39" y="2031.5" >main</text>
</g>
<g >
<title>finish_task_switch (40,404,040 samples, 1.85%)</title><rect x="485.3" y="1877" width="21.8" height="15.0" fill="rgb(254,183,6)" rx="2" ry="2" />
<text  x="488.28" y="1887.5" >f..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1077" width="10.9" height="15.0" fill="rgb(228,124,52)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (10,101,010 samples, 0.46%)</title><rect x="649.2" y="1925" width="5.4" height="15.0" fill="rgb(211,55,29)" rx="2" ry="2" />
<text  x="652.17" y="1935.5" ></text>
</g>
<g >
<title>read (10,101,010 samples, 0.46%)</title><rect x="523.5" y="2037" width="5.5" height="15.0" fill="rgb(231,211,0)" rx="2" ry="2" />
<text  x="526.52" y="2047.5" ></text>
</g>
<g >
<title>ros::checkForShutdown (10,101,010 samples, 0.46%)</title><rect x="15.5" y="37" width="5.4" height="15.0" fill="rgb(248,0,51)" rx="2" ry="2" />
<text  x="18.46" y="47.5" ></text>
</g>
<g >
<title>decision_planning::_DataPool::PublishAll (111,111,110 samples, 5.09%)</title><rect x="26.4" y="2005" width="60.1" height="15.0" fill="rgb(226,160,19)" rx="2" ry="2" />
<text  x="29.39" y="2015.5" >decisi..</text>
</g>
<g >
<title>el::base::TypedConfigurations::getConfigByRef&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,101,010 samples, 0.46%)</title><rect x="59.2" y="1893" width="5.4" height="15.0" fill="rgb(217,68,2)" rx="2" ry="2" />
<text  x="62.17" y="1903.5" ></text>
</g>
<g >
<title>sock_recvmsg (70,707,070 samples, 3.24%)</title><rect x="616.4" y="1973" width="38.2" height="15.0" fill="rgb(208,14,29)" rx="2" ry="2" />
<text  x="619.39" y="1983.5" >soc..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (40,404,040 samples, 1.85%)</title><rect x="485.3" y="1925" width="21.8" height="15.0" fill="rgb(233,166,36)" rx="2" ry="2" />
<text  x="488.28" y="1935.5" >s..</text>
</g>
<g >
<title>el::base::RegisteredLoggers::get (40,404,040 samples, 1.85%)</title><rect x="31.9" y="1957" width="21.8" height="15.0" fill="rgb(214,32,51)" rx="2" ry="2" />
<text  x="34.85" y="1967.5" >e..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="325" width="10.9" height="15.0" fill="rgb(228,179,19)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>__sys_recvfrom (70,707,070 samples, 3.24%)</title><rect x="616.4" y="1989" width="38.2" height="15.0" fill="rgb(216,190,53)" rx="2" ry="2" />
<text  x="619.39" y="1999.5" >__s..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1813" width="10.9" height="15.0" fill="rgb(243,117,23)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="629" width="10.9" height="15.0" fill="rgb(248,125,50)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>finish_task_switch (10,101,010 samples, 0.46%)</title><rect x="283.1" y="1845" width="5.5" height="15.0" fill="rgb(233,215,50)" rx="2" ry="2" />
<text  x="286.15" y="1855.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (979,797,970 samples, 44.91%)</title><rect x="654.6" y="2005" width="529.9" height="15.0" fill="rgb(237,187,17)" rx="2" ry="2" />
<text  x="657.63" y="2015.5" >__x64_sys_sendto</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1061" width="10.9" height="15.0" fill="rgb(238,219,39)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>security_file_permission (20,202,020 samples, 0.93%)</title><rect x="447.0" y="1925" width="11.0" height="15.0" fill="rgb(211,51,11)" rx="2" ry="2" />
<text  x="450.04" y="1935.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (10,101,010 samples, 0.46%)</title><rect x="91.9" y="2037" width="5.5" height="15.0" fill="rgb(209,5,32)" rx="2" ry="2" />
<text  x="94.94" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="69" width="10.9" height="15.0" fill="rgb(216,121,28)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="181" width="10.9" height="15.0" fill="rgb(239,17,6)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.93%)</title><rect x="10.0" y="1765" width="10.9" height="15.0" fill="rgb(252,23,40)" rx="2" ry="2" />
<text  x="13.00" y="1775.5" ></text>
</g>
<g >
<title>ksys_read (10,101,010 samples, 0.46%)</title><rect x="523.5" y="1973" width="5.5" height="15.0" fill="rgb(244,140,22)" rx="2" ry="2" />
<text  x="526.52" y="1983.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (70,707,070 samples, 3.24%)</title><rect x="616.4" y="2005" width="38.2" height="15.0" fill="rgb(236,35,52)" rx="2" ry="2" />
<text  x="619.39" y="2015.5" >__x..</text>
</g>
<g >
<title>epoll_wait (80,808,080 samples, 3.70%)</title><rect x="463.4" y="2037" width="43.7" height="15.0" fill="rgb(206,162,21)" rx="2" ry="2" />
<text  x="466.43" y="2047.5" >epol..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10,101,010 samples, 0.46%)</title><rect x="534.4" y="2021" width="5.5" height="15.0" fill="rgb(250,29,24)" rx="2" ry="2" />
<text  x="537.44" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.46%)</title><rect x="523.5" y="2005" width="5.5" height="15.0" fill="rgb(252,69,33)" rx="2" ry="2" />
<text  x="526.52" y="2015.5" ></text>
</g>
</g>
</svg>
